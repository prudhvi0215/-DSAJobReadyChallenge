class balancedBT
{
    public:
    int height;
    bool balanced;
};

//2) Check whether given binary tree is balanced or not
balancedBT isBalancedHelper(BinaryTreeNode<int> *root)
{
    if(root==NULL){
        balancedBT ans;
        ans.height = 0;
        ans.balanced = true;
        return ans;
    }
    
    balancedBT leftCheck = isBalancedHelper(root->left);
    balancedBT rightCheck = isBalancedHelper(root->right);
    
    bool balanceFlag;
    
    if(!leftCheck.balanced || !rightCheck.balanced || abs(leftCheck.height-rightCheck.height) > 1){
        balanceFlag = false;
    } else{
        balanceFlag = true;
    }
    
    balancedBT result;
    result.height = 1 + max(leftCheck.height,rightCheck.height);
    result.balanced = balanceFlag;
    
    return result;
}

bool isBalanced(BinaryTreeNode<int> *root)
{
    return isBalancedHelper(root).balanced;
}
